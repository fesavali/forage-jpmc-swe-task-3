From daa1afb773d72fc204caa03c9f9858801e6bf23e Mon Sep 17 00:00:00 2001
From: fesavali <felixnzioki99@gmail.com>
Date: Thu, 28 Sep 2023 08:48:15 +0300
Subject: [PATCH] task 3 changes

---
 src/DataManipulator.ts | 23 ++++++++++++++++++-----
 src/Graph.tsx          | 22 ++++++++++++++--------
 2 files changed, 32 insertions(+), 13 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7f62295..59d89a4 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,19 +1,32 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc: number,
+  price_def: number,
+  ratio: number,
   timestamp: Date,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined,
 }
 
 
 export class DataManipulator {
   static generateRow(serverResponds: ServerRespond[]) {
+    const priceABC = (serverRespond[0].top_task.price + serverRespond[0].top_bid.price)/2;
+    const priceDEF = (serverRespond[1].top_task.price + serverRespond[1].top_bid.price)/2;
+    const ratio = priceABC/priceDEF;
+    const upperBound = 1 + 0.05;
+    const lowerBound = 1 - 0.05;
     return serverResponds.map((el: any) => {
       return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
+        price_abc: priceABC,
+        price_def: priceDEF,
+        ratio,
+        timestamp: serverRespond[0].timestamp > serverRespond[1].timestamp ? serverRespond[0].timestamp : serverRespond[1].timestamp,
+        upper_bound: upperBound,
+        lower_bound: lowerBound,
+        trigger_alert: (ratio > upperBound || ratio < lowerBound) ? ratio : undefined,
       };
     })
   }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 277797d..85ab190 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
+      price_abc: 'float',
+      price_def: 'float',
+      ratio: 'float',
       timestamp: 'date',
+      upper_bound: 'float',
+      lower_bound: 'float',
+      trigger_alert: 'float',
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -40,19 +43,22 @@ class Graph extends Component<IProps, {}> {
       elem.setAttribute('row-pivots', '["timestamp"]');
       elem.setAttribute('columns', '["top_ask_price"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
+        price_abc: 'avg',
+        price_def: 'avg',
+        ratio: 'avg',
         timestamp: 'distinct count',
+        upper_bound: 'avg',
+        lower_bound: 'avg',
+        trigger_alert: 'avg',
       }));
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ]as unknown as TableData);
     }
   }
 }
-- 
2.39.2

